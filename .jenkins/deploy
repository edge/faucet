#!/usr/bin/env groovy
// Copyright (C) 2021 Edge Network Technologies Limited
// Use of this source code is governed by a GNU GPL-style license
// that can be found in the LICENSE.md file. All rights reserved.

def b64e(input) {
  return input.bytes.encodeBase64().toString()
}

def deployScript() {
  return b64e('''
  #!/bin/bash

  # Pull the latest version
  docker pull $IMAGE

  # Gracefully stop/remove existing service (if it exists)
  docker stop $NAME 2>/dev/null
  docker rm $NAME 2>/dev/null

  # And then run it again
  docker run \
    --detach \
    --name $NAME \
    --restart always \
    --network core-network \
    --expose $HTTP_PORT \
    --env HTTP_PORT=$HTTP_PORT \
    --env LOG_LEVEL=$LOG_LEVEL \
    --env LOGTAIL_SOURCE_TOKEN=$LOGTAIL_SOURCE_TOKEN \
    --env METRICS_BEARER_TOKEN=$METRICS_BEARER_TOKEN \
    --env REQUEST_AMOUNT=$REQUEST_AMOUNT \
    --env REQUEST_COOLDOWN_MS=$REQUEST_COOLDOWN_MS \
    --env STORAGE_DIRECTORY=$STORAGE_DIRECTORY \
    --env TWITTER_API_KEY=$TWITTER_API_KEY \
    --env TWITTER_SECRET=$TWITTER_SECRET \
    --env TWITTER_BEARER_TOKEN=$TWITTER_BEARER_TOKEN \
    --env XE_WALLET_ADDRESS=$XE_WALLET_ADDRESS \
    --env XE_WALLET_PRIVATE_KEY=$XE_WALLET_PRIVATE_KEY \
    --env VIRTUAL_HOST=$DOMAIN \
    --env LETSENCRYPT_HOST=$DOMAIN \
    --env LETSENCRYPT_EMAIL="adam@edge.network" \
    --volume faucet-data:$STORAGE_DIRECTORY \
    $IMAGE
  ''')
}

pipeline {
  agent any
  stages {
    //
    // Notify the team
    //
    stage('Notify') {
      steps {
        discordSend title: JOB_NAME, description: "${env.JOB_NAME} (#${env.BUILD_NUMBER}) has started", result: "SUCCESS", webhookURL: DISCORD_DEPLOY_WEBHOOK
      }
    }

    //
    // Deploy
    //
    stage('Deploy') {
      steps {
        script {
          def sshPort = env.SSH_PORT != null ? env.SSH_PORT : 22
          def ssh = "ssh -o ServerAliveInterval=120 -o ServerAliveCountMax=5 -o StrictHostKeyChecking=no -p ${sshPort} jenkins@${DEPLOY_TARGET} "
          def filename = "deploy_${UUID.randomUUID().toString()}.sh"
          def script = deployScript()

          // Using a pre-authorized key, connect to the specified server and run the deploy script.
          sshagent(credentials: ['a687b920-fcb4-41e4-a878-5ae1f6850b26']) {
            withCredentials([
              string(credentialsId: TWITTER_SECRET, variable: 'TWITTER_SECRET'),
              string(credentialsId: TWITTER_BEARER_TOKEN, variable: 'TWITTER_BEARER_TOKEN'),
              string(credentialsId: XE_WALLET_PRIVATE_KEY, variable: 'XE_WALLET_PRIVATE_KEY')
            ]) {
              println "> deploying ${IMAGE} ($NAME) to ${DEPLOY_TARGET}..."

              // Execute the script
              sh "$ssh 'echo $script | base64 -d > ${filename} && \
                chmod +x ${filename} && \
                NAME=$NAME \
                IMAGE=$IMAGE \
                HTTP_PORT=$HTTP_PORT \
                DOMAIN=$DOMAIN \
                LOG_LEVEL=$LOG_LEVEL \
                LOGTAIL_SOURCE_TOKEN=$LOGTAIL_SOURCE_TOKEN \
                METRICS_BEARER_TOKEN=$METRICS_BEARER_TOKEN \
                REQUEST_AMOUNT=$REQUEST_AMOUNT \
                REQUEST_COOLDOWN_MS=$REQUEST_COOLDOWN_MS \
                STORAGE_DIRECTORY=$STORAGE_DIRECTORY \
                TWITTER_API_KEY=$TWITTER_API_KEY \
                TWITTER_SECRET=$TWITTER_SECRET \
                TWITTER_BEARER_TOKEN=$TWITTER_BEARER_TOKEN \
                XE_WALLET_ADDRESS=$XE_WALLET_ADDRESS \
                XE_WALLET_PRIVATE_KEY=$XE_WALLET_PRIVATE_KEY \
                  bash -x ./${filename} && \
                rm ${filename}'"
            }
          }
        }
      }
    }
  }
  post {
    success {
      script {
        discordSend title: JOB_NAME, description: "${env.JOB_NAME} (#${env.BUILD_NUMBER}) has been deployed", result: "SUCCESS", webhookURL: DISCORD_DEPLOY_WEBHOOK
      }
    }
    failure {
      script {
        discordSend title: JOB_NAME, description: "${env.JOB_NAME} (#${env.BUILD_NUMBER}) failed to deploy", result: "FAILURE", webhookURL: DISCORD_DEPLOY_WEBHOOK
      }
    }
    aborted {
      script {
        discordSend title: JOB_NAME, description: "${env.JOB_NAME} (#${env.BUILD_NUMBER}) was aborted", result: "ABORTED", webhookURL: DISCORD_DEPLOY_WEBHOOK
      }
    }
  }
}
